import 'package:flutter/material.dart';
import 'package:fooddelivery_project/api/host.dart';
import 'package:fooddelivery_project/customer/cart_provider.dart';
import 'package:fooddelivery_project/model/cart.dart';
import 'package:fooddelivery_project/model/sqlite_helper.dart';
import 'package:provider/provider.dart';

class ShoppingCart extends StatefulWidget {
  const ShoppingCart({Key? key}) : super(key: key);

  @override
  State<ShoppingCart> createState() => _ShoppingCartState();
}

class _ShoppingCartState extends State<ShoppingCart> {
  DBHelper? dbHelper = DBHelper();

  @override
  Widget build(BuildContext context) {
    final cart = Provider.of<CartProvider>(context);

    return Scaffold(
      appBar: AppBar(
        title: Text('My Cart'),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          children: [
            FutureBuilder(
                future: cart.getData(),
                builder: ((context, AsyncSnapshot<List<Cart>> snapshot) {
                  if (snapshot.hasData) {
                    if (snapshot.data!.isEmpty) {
                      return Column(
                        children: [
                          Center(
                            child: Text('Cart is Empty'),
                          ),
                        ],
                      );
                    } else {
                      return Expanded(
                          child: ListView.builder(
                        itemCount: snapshot.data!.length,
                        itemBuilder: (context, index) {
                          return Card(
                            child: Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.start,
                                    crossAxisAlignment:
                                        CrossAxisAlignment.center,
                                    mainAxisSize: MainAxisSize.max,
                                    children: [
                                      Container(
                                        width: 100,
                                        height: 100,
                                        child: Image.network(
                                          '${MyHost().domain}${snapshot.data![index].image}',
                                          fit: BoxFit.cover,
                                        ),
                                      ),
                                      SizedBox(width: 10),
                                      Expanded(
                                        child: Column(
                                          mainAxisAlignment:
                                              MainAxisAlignment.start,
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            Row(
                                              mainAxisAlignment:
                                                  MainAxisAlignment
                                                      .spaceBetween,
                                              children: [
                                                Text(snapshot
                                                    .data![index].foodName
                                                    .toString()),
                                                InkWell(
                                                  onTap: () {
                                                    dbHelper!.delete(snapshot
                                                        .data![index].id!);
                                                    cart.removeCounter();
                                                    cart.removeTotalPrice(
                                                        double.parse(snapshot
                                                            .data![index]
                                                            .foodPrice
                                                            .toString()));
                                                  },
                                                  child: const Icon(
                                                    Icons.delete,
                                                  ),
                                                ),
                                              ],
                                            ),
                                            SizedBox(height: 5),
                                            Text(
                                              snapshot.data![index].sum
                                                  .toString(),
                                            ),
                                            Align(
                                              alignment: Alignment.centerRight,
                                              child: Container(
                                                height: 35,
                                                width: 100,
                                                decoration: BoxDecoration(
                                                    color: Colors.green,
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            5)),
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.all(4.0),
                                                  child: Row(
                                                    mainAxisAlignment:
                                                        MainAxisAlignment
                                                            .spaceEvenly,
                                                    children: [
                                                      InkWell(
                                                        onTap: () {
                                                          int amount = snapshot
                                                              .data![index]
                                                              .amount!;
                                                          int price = snapshot
                                                              .data![index]
                                                              .foodPrice!;
                                                          amount++;
                                                          int? newPrice =
                                                              price * amount;

                                                          dbHelper!
                                                              .updateAmount(
                                                                  Cart(
                                                            id: snapshot
                                                                .data![index]
                                                                .id,
                                                            foodName: snapshot
                                                                .data![index]
                                                                .foodName,
                                                            foodPrice: snapshot
                                                                .data![index]
                                                                .foodPrice,
                                                            amount: amount,
                                                            distance: snapshot
                                                                .data![index]
                                                                .distance,
                                                            image: snapshot
                                                                .data![index]
                                                                .image,
                                                            idFood: snapshot
                                                                .data![index]
                                                                .idFood,
                                                            idRes: snapshot
                                                                .data![index]
                                                                .idRes,
                                                            menuFood: snapshot
                                                                .data![index]
                                                                .menuFood,
                                                            restaurantName: snapshot
                                                                .data![index]
                                                                .restaurantName,
                                                            transport: snapshot
                                                                .data![index]
                                                                .transport,
                                                            sum: newPrice,
                                                          ))
                                                              .then((value) {
                                                            newPrice = 0;
                                                            amount = 0;
                                                            cart.addTotalPrice(
                                                                double.parse(snapshot
                                                                    .data![
                                                                        index]
                                                                    .foodPrice
                                                                    .toString()));
                                                          });
                                                        },
                                                        child: const Icon(
                                                          Icons.add,
                                                          color: Colors.white,
                                                        ),
                                                      ),
                                                      Text(
                                                        snapshot
                                                            .data![index].amount
                                                            .toString(),
                                                        style: const TextStyle(
                                                            color:
                                                                Colors.white),
                                                      ),
                                                      InkWell(
                                                        onTap: () {
                                                          int amount = snapshot
                                                              .data![index]
                                                              .amount!;
                                                          int price = snapshot
                                                              .data![index]
                                                              .foodPrice!;
                                                          amount--;
                                                          int? newPrice =
                                                              price * amount;

                                                          if (amount > 0) {
                                                            dbHelper!
                                                                .updateAmount(
                                                                    Cart(
                                                              id: snapshot
                                                                  .data![index]
                                                                  .id,
                                                              foodName: snapshot
                                                                  .data![index]
                                                                  .foodName,
                                                              foodPrice: snapshot
                                                                  .data![index]
                                                                  .foodPrice,
                                                              amount: amount,
                                                              distance: snapshot
                                                                  .data![index]
                                                                  .distance,
                                                              image: snapshot
                                                                  .data![index]
                                                                  .image,
                                                              idFood: snapshot
                                                                  .data![index]
                                                                  .idFood,
                                                              idRes: snapshot
                                                                  .data![index]
                                                                  .idRes,
                                                              menuFood: snapshot
                                                                  .data![index]
                                                                  .menuFood,
                                                              restaurantName:
                                                                  snapshot
                                                                      .data![
                                                                          index]
                                                                      .restaurantName,
                                                              transport: snapshot
                                                                  .data![index]
                                                                  .transport,
                                                              sum: newPrice,
                                                            ))
                                                                .then((value) {
                                                              newPrice = 0;
                                                              amount = 0;
                                                              cart.removeTotalPrice(
                                                                  double.parse(snapshot
                                                                      .data![
                                                                          index]
                                                                      .foodPrice
                                                                      .toString()));
                                                            });
                                                          }
                                                        },
                                                        child: const Icon(
                                                          Icons.remove,
                                                          color: Colors.white,
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ],
                                        ),
                                      )
                                    ],
                                  )
                                ],
                              ),
                            ),
                          );
                        },
                      ));
                    }
                  }
                  return Text('');
                })),
            Consumer<CartProvider>(builder: (context, value, child) {
              return Visibility(
                visible: value.getTotalPrice().toStringAsFixed(2) == "0.00"
                    ? false
                    : true,
                child: Column(
                  children: [
                    ReusableWidget(
                        title: 'sub Total',
                        value: r'$' + value.getTotalPrice().toStringAsFixed(2)),
                    ReusableWidget(title: 'Discount 5 %', value: r'$' + '20'),
                    ReusableWidget(
                        title: 'Total',
                        value: r'$' + value.getTotalPrice().toString()),
                  ],
                ),
              );
            }),
            Consumer<CartProvider>(builder: (context, value, child) {
              return Visibility(
                child: Column(
                  children: [
                    ElevatedButton(
                        onPressed: () {
                          print(value.getTotalPrice());
                        },
                        child: Text('data')),
                  ],
                ),
              );
            }),
          ],
        ),
      ),
    );
  }
}

class ReusableWidget extends StatelessWidget {
  final String title, value;
  const ReusableWidget({Key? key, required this.title, required this.value})
      : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 4),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(title, style: Theme.of(context).textTheme.subtitle2),
          Text(value, style: Theme.of(context).textTheme.subtitle2)
        ],
      ),
    );
  }
}
